Супер класс - автомобиль
Класс - киа
Класс - тойота
Объект - камри
Объект - соренто




Любой класс при создании наследуется от родительского супер-класса Object
У этого класса есть свои методы. Их надо знать в совершенстве


Animal

      object
        |
      animal            супер-класс
    /   |    \
 cat   Dog    horse   meal -> plat
      /   \
    dog1  dog2          объекты

Множественное наследование не поддерживается, только прямое.


Модификаторы доступа:
- private
- default
- protected
- public

 @Override переопределение метода



1. Создать классы Собака и Кот с наследованием от класса Животное.

2. Всe животные могут бежать и плыть. В качестве параметра каждому методу передается длина препятствия.
Результатом выполнения действия будет печать в консоль.
(Например, dogBobik.run(150); -> 'Бобик пробежал 150 м.');

3. У каждого животного есть ограничения на действия
(бег: кот 200 м., собака 500 м.; плавание: кот не умеет плавать, собака 10 м.).


4. * Добавить подсчет созданных котов, собак и животных.


5. Расширить задачу про котов и тарелки с едой, выполнив следующие пункты:

Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды
(например, в миске 10 еды, а кот пытается покушать 15-20).


bollean
Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны).
Если коту удалось покушать (хватило еды), сытость = true.


Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт
(это сделано для упрощения логики программы).


Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и
потом вывести информацию о сытости котов в консоль.


Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку.


6. Создать класс Payment с внутренним классом,
с помощью объектов которого можно сформировать покупку из нескольких товаров.


7. Создать класс Park с внутренним классом,
с помощью объектов которого можно хранить информацию об аттракционах, времени их работы и стоимости.


8. Применяя интерфейсы написать программу расчета периметра и площади геометрических фигур
: круг, прямоугольник, треугольник.
Задать для каждой фигуры цвет заливки и цвет границы.

Результат полученных характеристик [Периметр, площадь, цвет фона, цвет границ]
по каждой фигуре вывести в консоль.

Попробуйте реализовать базовые методы, такие как расчет периметра фигур,
в качестве дефолтных методов в интерфейсе.